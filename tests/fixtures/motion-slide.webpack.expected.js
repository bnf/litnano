import*as t from"lit";import*as e from"lit/directives/class-map.js";import*as s from"@lit-labs/motion";var i={d:(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const o=(l={LitElement:()=>t.LitElement,css:()=>t.css,html:()=>t.html},r={},i.d(r,l),r);var l,r;const a=(t=>{var e={};return i.d(e,t),e})({classMap:()=>e.classMap}),c=(t=>{var e={};return i.d(e,t),e})({animate:()=>s.animate});class n extends o.LitElement{static properties={slid:{type:Boolean}};static styles=o.css`.circle{position:relative;background:#4682b4;--box-size:25vw;height:var(--box-size);width:var(--box-size);border-radius:50%}.slid{left:calc(100% - var(--box-size))}`;constructor(){super(),this.slid=!1}render(){const t=document.clientWidth,e=document.clientHeight;return o.html`<p style=width:${t+"px"};height:${e+"px"} .propName=${globalThis.fooBar}><button @click=${()=>this.slid=!this.slid}>Slide ${"foo"}${"bar"}</button></p><p class="circle ${(0,a.classMap)({slid:this.slid})}" ${(0,c.animate)()}></p><div @camelCase=${t=>console.log(t)}></div>`}}customElements.define("motion-slide",n);